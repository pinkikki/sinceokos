// Code generated by protoc-gen-go. DO NOT EDIT.
// source: diary/diary.proto

package diary

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DiaryCriteria struct {
	TargetCat            string   `protobuf:"bytes,1,opt,name=target_cat,json=targetCat,proto3" json:"target_cat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiaryCriteria) Reset()         { *m = DiaryCriteria{} }
func (m *DiaryCriteria) String() string { return proto.CompactTextString(m) }
func (*DiaryCriteria) ProtoMessage()    {}
func (*DiaryCriteria) Descriptor() ([]byte, []int) {
	return fileDescriptor_05317ebbb725b0ab, []int{0}
}

func (m *DiaryCriteria) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiaryCriteria.Unmarshal(m, b)
}
func (m *DiaryCriteria) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiaryCriteria.Marshal(b, m, deterministic)
}
func (m *DiaryCriteria) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiaryCriteria.Merge(m, src)
}
func (m *DiaryCriteria) XXX_Size() int {
	return xxx_messageInfo_DiaryCriteria.Size(m)
}
func (m *DiaryCriteria) XXX_DiscardUnknown() {
	xxx_messageInfo_DiaryCriteria.DiscardUnknown(m)
}

var xxx_messageInfo_DiaryCriteria proto.InternalMessageInfo

func (m *DiaryCriteria) GetTargetCat() string {
	if m != nil {
		return m.TargetCat
	}
	return ""
}

type DiaryResponse struct {
	No                   string   `protobuf:"bytes,1,opt,name=no,proto3" json:"no,omitempty"`
	Text                 string   `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiaryResponse) Reset()         { *m = DiaryResponse{} }
func (m *DiaryResponse) String() string { return proto.CompactTextString(m) }
func (*DiaryResponse) ProtoMessage()    {}
func (*DiaryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_05317ebbb725b0ab, []int{1}
}

func (m *DiaryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiaryResponse.Unmarshal(m, b)
}
func (m *DiaryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiaryResponse.Marshal(b, m, deterministic)
}
func (m *DiaryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiaryResponse.Merge(m, src)
}
func (m *DiaryResponse) XXX_Size() int {
	return xxx_messageInfo_DiaryResponse.Size(m)
}
func (m *DiaryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DiaryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DiaryResponse proto.InternalMessageInfo

func (m *DiaryResponse) GetNo() string {
	if m != nil {
		return m.No
	}
	return ""
}

func (m *DiaryResponse) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func init() {
	proto.RegisterType((*DiaryCriteria)(nil), "DiaryCriteria")
	proto.RegisterType((*DiaryResponse)(nil), "DiaryResponse")
}

func init() { proto.RegisterFile("diary/diary.proto", fileDescriptor_05317ebbb725b0ab) }

var fileDescriptor_05317ebbb725b0ab = []byte{
	// 148 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4c, 0xc9, 0x4c, 0x2c,
	0xaa, 0xd4, 0x07, 0x93, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x4a, 0x7a, 0x5c, 0xbc, 0x2e, 0x20,
	0xae, 0x73, 0x51, 0x66, 0x49, 0x6a, 0x51, 0x66, 0xa2, 0x90, 0x2c, 0x17, 0x57, 0x49, 0x62, 0x51,
	0x7a, 0x6a, 0x49, 0x7c, 0x72, 0x62, 0x89, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x27, 0x44,
	0xc4, 0x39, 0xb1, 0x44, 0xc9, 0x18, 0xaa, 0x3e, 0x28, 0xb5, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x55,
	0x88, 0x8f, 0x8b, 0x29, 0x2f, 0x1f, 0xaa, 0x8e, 0x29, 0x2f, 0x5f, 0x48, 0x88, 0x8b, 0xa5, 0x24,
	0xb5, 0xa2, 0x44, 0x82, 0x09, 0x2c, 0x02, 0x66, 0x1b, 0x19, 0x70, 0xb1, 0x82, 0x35, 0x09, 0xa9,
	0x73, 0x31, 0xbb, 0xa7, 0x96, 0x08, 0xf1, 0xe9, 0xa1, 0xd8, 0x29, 0x05, 0xe5, 0xc3, 0xcc, 0x54,
	0x62, 0x48, 0x62, 0x03, 0xbb, 0xce, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xcc, 0xc3, 0xc2, 0xb5,
	0xb2, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DiaryClient is the client API for Diary service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DiaryClient interface {
	Get(ctx context.Context, in *DiaryCriteria, opts ...grpc.CallOption) (*DiaryResponse, error)
}

type diaryClient struct {
	cc *grpc.ClientConn
}

func NewDiaryClient(cc *grpc.ClientConn) DiaryClient {
	return &diaryClient{cc}
}

func (c *diaryClient) Get(ctx context.Context, in *DiaryCriteria, opts ...grpc.CallOption) (*DiaryResponse, error) {
	out := new(DiaryResponse)
	err := c.cc.Invoke(ctx, "/Diary/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DiaryServer is the server API for Diary service.
type DiaryServer interface {
	Get(context.Context, *DiaryCriteria) (*DiaryResponse, error)
}

// UnimplementedDiaryServer can be embedded to have forward compatible implementations.
type UnimplementedDiaryServer struct {
}

func (*UnimplementedDiaryServer) Get(ctx context.Context, req *DiaryCriteria) (*DiaryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}

func RegisterDiaryServer(s *grpc.Server, srv DiaryServer) {
	s.RegisterService(&_Diary_serviceDesc, srv)
}

func _Diary_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DiaryCriteria)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiaryServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Diary/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiaryServer).Get(ctx, req.(*DiaryCriteria))
	}
	return interceptor(ctx, in, info, handler)
}

var _Diary_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Diary",
	HandlerType: (*DiaryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _Diary_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "diary/diary.proto",
}
